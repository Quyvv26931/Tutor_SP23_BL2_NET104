// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tutor_SP23_BL2_NET104.ArtShopDbContext;

#nullable disable

namespace Tutor_SP23_BL2_NET104.Migrations
{
    [DbContext(typeof(ArtShopContext))]
    [Migration("20230408065317_Create")]
    partial class Create
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Tutor_SP23_BL2_NET104.Models.Bill", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdUser");

                    b.ToTable("Bill", (string)null);
                });

            modelBuilder.Entity("Tutor_SP23_BL2_NET104.Models.CartDetails", b =>
                {
                    b.Property<Guid>("IdProduct")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("IdProduct", "IdUser");

                    b.HasIndex("IdUser");

                    b.ToTable("CartDetails", (string)null);
                });

            modelBuilder.Entity("Tutor_SP23_BL2_NET104.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("1871ad42-6960-473d-aa75-aabc6edf5014"),
                            CreatedTime = new DateTime(2023, 4, 8, 13, 53, 17, 590, DateTimeKind.Local).AddTicks(1292),
                            Name = "Tranh Trừu Tượng",
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("2871ad42-6960-473d-aa75-aabc6edf5014"),
                            CreatedTime = new DateTime(2023, 4, 8, 13, 53, 17, 590, DateTimeKind.Local).AddTicks(1295),
                            Name = "Tranh Tối Giản",
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("3871ad42-6960-473d-aa75-aabc6edf5014"),
                            CreatedTime = new DateTime(2023, 4, 8, 13, 53, 17, 590, DateTimeKind.Local).AddTicks(1296),
                            Name = "Tranh Sơn Dầu",
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("4871ad42-6960-473d-aa75-aabc6edf5014"),
                            CreatedTime = new DateTime(2023, 4, 8, 13, 53, 17, 590, DateTimeKind.Local).AddTicks(1298),
                            Name = "Tranh Tĩnh Vật",
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("5871ad42-6960-473d-aa75-aabc6edf5014"),
                            CreatedTime = new DateTime(2023, 4, 8, 13, 53, 17, 590, DateTimeKind.Local).AddTicks(1299),
                            Name = "Khác",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Tutor_SP23_BL2_NET104.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Amount")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdCategory")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Price")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<double?>("ReducedPrice")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCategory");

                    b.ToTable("Product", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("9971ad42-6960-473d-aa75-aabc6edf5014"),
                            Amount = 100,
                            CreatedTime = new DateTime(2023, 4, 8, 13, 53, 17, 590, DateTimeKind.Local).AddTicks(1389),
                            Description = "TRANH TREO TƯỜNG TT01",
                            IdCategory = new Guid("1871ad42-6960-473d-aa75-aabc6edf5014"),
                            Image = "https://tuongvip.vn/public/uploads/products/44768/tranh-treo-tuong-nghe-thuat-truu-tuong.jpg",
                            Name = "TRANH TREO TƯỜNG TT01",
                            Price = 600000.0,
                            ReducedPrice = 500000.0,
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("9071ad42-6960-473d-aa75-aabc6edf5014"),
                            Amount = 100,
                            CreatedTime = new DateTime(2023, 4, 8, 13, 53, 17, 590, DateTimeKind.Local).AddTicks(1393),
                            Description = "TRANH TREO TƯỜNG TT02",
                            IdCategory = new Guid("1871ad42-6960-473d-aa75-aabc6edf5014"),
                            Image = "https://tuongvip.vn/public/uploads/products/44768/tranh-treo-tuong-nghe-thuat-truu-tuong.jpg",
                            Name = "TRANH TREO TƯỜNG TT02",
                            Price = 600000.0,
                            ReducedPrice = 500000.0,
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("1171ad42-6960-473d-aa75-aabc6edf5014"),
                            Amount = 100,
                            CreatedTime = new DateTime(2023, 4, 8, 13, 53, 17, 590, DateTimeKind.Local).AddTicks(1396),
                            Description = "TRANH TREO TƯỜNG TG01",
                            IdCategory = new Guid("1871ad42-6960-473d-aa75-aabc6edf5014"),
                            Image = "https://tuongvip.vn/public/uploads/products/57505/tranh-treo-tuong-nghe-thuat-hinh-hoc-toi-gian-02.jpg",
                            Name = "TRANH TREO TƯỜNG TG01",
                            Price = 600000.0,
                            ReducedPrice = 500000.0,
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("1071ad42-6960-473d-aa75-aabc6edf5014"),
                            Amount = 100,
                            CreatedTime = new DateTime(2023, 4, 8, 13, 53, 17, 590, DateTimeKind.Local).AddTicks(1399),
                            Description = "TRANH TREO TƯỜNG TG02",
                            IdCategory = new Guid("1871ad42-6960-473d-aa75-aabc6edf5014"),
                            Image = "https://tuongvip.vn/public/uploads/products/57505/tranh-treo-tuong-nghe-thuat-hinh-hoc-toi-gian-02.jpg",
                            Name = "TRANH TREO TƯỜNG TG02",
                            Price = 600000.0,
                            ReducedPrice = 500000.0,
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("4471ad42-6960-473d-aa75-aabc6edf5014"),
                            Amount = 100,
                            CreatedTime = new DateTime(2023, 4, 8, 13, 53, 17, 590, DateTimeKind.Local).AddTicks(1402),
                            Description = "TRANH TREO TƯỜNG SD01",
                            IdCategory = new Guid("4871ad42-6960-473d-aa75-aabc6edf5014"),
                            Image = "https://tuongvip.vn/public/uploads/products/59925/tranh-treo-tuong-son-dau-phong-canh-lang-que-dep-11.jpg",
                            Name = "TRANH TREO TƯỜNG SD01",
                            Price = 600000.0,
                            ReducedPrice = 500000.0,
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("4071ad42-6960-473d-aa75-aabc6edf5014"),
                            Amount = 100,
                            CreatedTime = new DateTime(2023, 4, 8, 13, 53, 17, 590, DateTimeKind.Local).AddTicks(1405),
                            Description = "TRANH TREO TƯỜNG SD02",
                            IdCategory = new Guid("4871ad42-6960-473d-aa75-aabc6edf5014"),
                            Image = "https://tuongvip.vn/public/uploads/products/59925/tranh-treo-tuong-son-dau-phong-canh-lang-que-dep-11.jpg",
                            Name = "TRANH TREO TƯỜNG SD02",
                            Price = 600000.0,
                            ReducedPrice = 500000.0,
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("5571ad42-6960-473d-aa75-aabc6edf5014"),
                            Amount = 100,
                            CreatedTime = new DateTime(2023, 4, 8, 13, 53, 17, 590, DateTimeKind.Local).AddTicks(1407),
                            Description = "TRANH TREO TƯỜNG TV01",
                            IdCategory = new Guid("5871ad42-6960-473d-aa75-aabc6edf5014"),
                            Image = "https://tuongvip.vn/public/uploads/products/36271/tranh-treo-tuong-binh-hoa-nghe-thuat-10-1.jpg",
                            Name = "TRANH TREO TƯỜNG TV01",
                            Price = 600000.0,
                            ReducedPrice = 500000.0,
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("5071ad42-6960-473d-aa75-aabc6edf5014"),
                            Amount = 100,
                            CreatedTime = new DateTime(2023, 4, 8, 13, 53, 17, 590, DateTimeKind.Local).AddTicks(1410),
                            Description = "TRANH TREO TƯỜNG TV02",
                            IdCategory = new Guid("5871ad42-6960-473d-aa75-aabc6edf5014"),
                            Image = "https://tuongvip.vn/public/uploads/products/36271/tranh-treo-tuong-binh-hoa-nghe-thuat-10-1.jpg",
                            Name = "TRANH TREO TƯỜNG TV02",
                            Price = 600000.0,
                            ReducedPrice = 500000.0,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Tutor_SP23_BL2_NET104.Models.ProductBill", b =>
                {
                    b.Property<Guid>("IdProduct")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdBill")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("ReducedPrice")
                        .HasColumnType("float");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("IdProduct", "IdBill");

                    b.HasIndex("IdBill");

                    b.ToTable("ProductBill", (string)null);
                });

            modelBuilder.Entity("Tutor_SP23_BL2_NET104.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Role", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("9871ad42-6960-473d-aa75-aabc6edf5014"),
                            CreatedTime = new DateTime(2023, 4, 8, 13, 53, 17, 590, DateTimeKind.Local).AddTicks(1136),
                            Name = "Admin",
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedTime = new DateTime(2023, 4, 8, 13, 53, 17, 590, DateTimeKind.Local).AddTicks(1149),
                            Name = "Customer",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Tutor_SP23_BL2_NET104.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("IdRole")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("IdRole");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("9871ad42-6960-473d-aa75-aabc6edf5014"),
                            CreatedTime = new DateTime(2023, 4, 8, 13, 53, 17, 590, DateTimeKind.Local).AddTicks(1275),
                            Email = "giangnlh.forworking@gmail.com",
                            FullName = "giangnlh.forworking",
                            IdRole = new Guid("00000000-0000-0000-0000-000000000000"),
                            Password = "giangnlh.forworking",
                            Status = 0,
                            Username = "giangnlh.forworking"
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            CreatedTime = new DateTime(2023, 4, 8, 13, 53, 17, 590, DateTimeKind.Local).AddTicks(1276),
                            Email = "nlhg090602@gmail.com",
                            FullName = "nlhg090602",
                            IdRole = new Guid("00000000-0000-0000-0000-000000000000"),
                            Password = "nlhg090602",
                            Status = 0,
                            Username = "nlhg090602"
                        });
                });

            modelBuilder.Entity("Tutor_SP23_BL2_NET104.Models.Bill", b =>
                {
                    b.HasOne("Tutor_SP23_BL2_NET104.Models.User", "User")
                        .WithMany("Bills")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Tutor_SP23_BL2_NET104.Models.CartDetails", b =>
                {
                    b.HasOne("Tutor_SP23_BL2_NET104.Models.Product", "Product")
                        .WithMany("CartDetails")
                        .HasForeignKey("IdProduct")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Tutor_SP23_BL2_NET104.Models.User", "User")
                        .WithMany("CartDetails")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Tutor_SP23_BL2_NET104.Models.Product", b =>
                {
                    b.HasOne("Tutor_SP23_BL2_NET104.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("IdCategory")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Tutor_SP23_BL2_NET104.Models.ProductBill", b =>
                {
                    b.HasOne("Tutor_SP23_BL2_NET104.Models.Bill", "Bill")
                        .WithMany("ProductBills")
                        .HasForeignKey("IdBill")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Tutor_SP23_BL2_NET104.Models.Product", "Product")
                        .WithMany("ProductBills")
                        .HasForeignKey("IdProduct")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bill");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Tutor_SP23_BL2_NET104.Models.User", b =>
                {
                    b.HasOne("Tutor_SP23_BL2_NET104.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("IdRole")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Tutor_SP23_BL2_NET104.Models.Bill", b =>
                {
                    b.Navigation("ProductBills");
                });

            modelBuilder.Entity("Tutor_SP23_BL2_NET104.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Tutor_SP23_BL2_NET104.Models.Product", b =>
                {
                    b.Navigation("CartDetails");

                    b.Navigation("ProductBills");
                });

            modelBuilder.Entity("Tutor_SP23_BL2_NET104.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Tutor_SP23_BL2_NET104.Models.User", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("CartDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
